{"ast":null,"code":"var _jsxFileName = \"E:\\\\Semester-3\\\\Emerging Dev. Technologies 01 (M11 Group 1)\\\\week5\\\\conways-game using react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\n\n// Constants for board size\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ROWS = 20;\nconst COLS = 20;\n\n// Helper function to create an empty board\nconst createEmptyBoard = () => {\n  const board = [];\n  for (let i = 0; i < ROWS; i++) {\n    board.push(Array(COLS).fill(0));\n  }\n  return board;\n};\nfunction App() {\n  _s();\n  const [board, setBoard] = useState(createEmptyBoard());\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  // Function to toggle cell state (alive/dead) when clicked\n\n  // Function to count the live neighbors of a given cell\n  const countNeighbors = (board, x, y) => {\n    const dirs = [[-1, -1], [-1, 0], [-1, 1], [0, -1], [0, 1], [1, -1], [1, 0], [1, 1]];\n    let count = 0;\n    dirs.forEach(([dx, dy]) => {\n      const newX = x + dx;\n      const newY = y + dy;\n      if (newX >= 0 && newX < ROWS && newY >= 0 && newY < COLS) {\n        count += board[newX][newY];\n      }\n    });\n    return count;\n  };\n\n  // Function to apply Conway's Game of Life rules to the board\n  const nextGeneration = () => {\n    const newBoard = board.map((row, x) => row.map((cell, y) => {\n      const neighbors = countNeighbors(board, x, y);\n      if (cell === 1 && (neighbors < 2 || neighbors > 3)) {\n        return 0; // Cell dies\n      } else if (cell === 0 && neighbors === 3) {\n        return 1; // Cell becomes alive\n      }\n      return cell; // Remains the same\n    }));\n    setBoard(newBoard);\n  };\n\n  // Start/stop the game logic\n  useEffect(() => {\n    if (isPlaying) {\n      const interval = setInterval(() => {\n        nextGeneration();\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [isPlaying, board]);\n\n  // Handle Play/Stop\n  const handlePlayStop = () => {\n    setIsPlaying(!isPlaying);\n  };\n\n  // Handle clearing the board\n  const handleClear = () => {\n    setBoard(createEmptyBoard());\n    setIsPlaying(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Conway's Game of Life\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: board.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `cell ${cell ? 'alive' : 'dead'}`,\n          onClick: () => handleCellClick(rowIndex, colIndex)\n        }, colIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePlayStop,\n        children: isPlaying ? 'Stop' : 'Play'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClear,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QU+cJ4Qk+qk4NU2jyNE5neO7oZM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ROWS","COLS","createEmptyBoard","board","i","push","Array","fill","App","_s","setBoard","isPlaying","setIsPlaying","countNeighbors","x","y","dirs","count","forEach","dx","dy","newX","newY","nextGeneration","newBoard","map","row","cell","neighbors","interval","setInterval","clearInterval","handlePlayStop","handleClear","className","children","fileName","_jsxFileName","lineNumber","columnNumber","rowIndex","colIndex","onClick","handleCellClick","_c","$RefreshReg$"],"sources":["E:/Semester-3/Emerging Dev. Technologies 01 (M11 Group 1)/week5/conways-game using react/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\n// Constants for board size\nconst ROWS = 20;\nconst COLS = 20;\n\n// Helper function to create an empty board\nconst createEmptyBoard = () => {\n  const board = [];\n  for (let i = 0; i < ROWS; i++) {\n    board.push(Array(COLS).fill(0));\n  }\n  return board;\n};\n\nfunction App() {\n  const [board, setBoard] = useState(createEmptyBoard());\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  // Function to toggle cell state (alive/dead) when clicked\n\n\n  // Function to count the live neighbors of a given cell\n  const countNeighbors = (board, x, y) => {\n    const dirs = [\n      [-1, -1], [-1, 0], [-1, 1],\n      [0, -1],        [0, 1],\n      [1, -1], [1, 0], [1, 1]\n    ];\n\n    let count = 0;\n    dirs.forEach(([dx, dy]) => {\n      const newX = x + dx;\n      const newY = y + dy;\n      if (newX >= 0 && newX < ROWS && newY >= 0 && newY < COLS) {\n        count += board[newX][newY];\n      }\n    });\n    return count;\n  };\n\n  // Function to apply Conway's Game of Life rules to the board\n  const nextGeneration = () => {\n    const newBoard = board.map((row, x) =>\n      row.map((cell, y) => {\n        const neighbors = countNeighbors(board, x, y);\n        if (cell === 1 && (neighbors < 2 || neighbors > 3)) {\n          return 0; // Cell dies\n        } else if (cell === 0 && neighbors === 3) {\n          return 1; // Cell becomes alive\n        }\n        return cell; // Remains the same\n      })\n    );\n    setBoard(newBoard);\n  };\n\n  // Start/stop the game logic\n  useEffect(() => {\n    if (isPlaying) {\n      const interval = setInterval(() => {\n        nextGeneration();\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [isPlaying, board]);\n\n  // Handle Play/Stop\n  const handlePlayStop = () => {\n    setIsPlaying(!isPlaying);\n  };\n\n  // Handle clearing the board\n  const handleClear = () => {\n    setBoard(createEmptyBoard());\n    setIsPlaying(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Conway's Game of Life</h1>\n      <div className=\"board\">\n        {board.map((row, rowIndex) => (\n          <div key={rowIndex} className=\"row\">\n            {row.map((cell, colIndex) => (\n              <div\n                key={colIndex}\n                className={`cell ${cell ? 'alive' : 'dead'}`}\n                onClick={() => handleCellClick(rowIndex, colIndex)}\n              />\n            ))}\n          </div>\n        ))}\n      </div>\n      <div className=\"controls\">\n        <button onClick={handlePlayStop}>{isPlaying ? 'Stop' : 'Play'}</button>\n        <button onClick={handleClear}>Clear</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}